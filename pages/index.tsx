import Login from "@/components/Auth/Login";
import Register from "@/components/Auth/Register";
import Background from "@/components/Background";
import Chat from "@/components/Chat";
import Header from "@/components/Header";
import Info from "@/components/Info";
import Loading from "@/components/Loading";
import Nodes from "@/components/Nodes";
import Player from "@/components/Player";
import Sidebar from "@/components/Sidebar";
import TimerAlert from "@/components/TimerAlert";
import { useGlobal, useRoom, useTool, useUser } from "@/hooks/index";
import Head from "next/head";

const Home = () => {
  const { showInfo, showLogin, showRegister } = useGlobal();
  const { loading: loadingUser, isLogin, user } = useUser();
  const { room, loading: loadingRoom } = useRoom();
  return (
    <div className="relative">
      <Head>
        <title>Lofi chill study</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="wrapper relative h-screen w-full">
        <Background />
        <div className="">
          <Header />
          <Sidebar />

          {/* Show Nodes  */}
          {/* Case 1: User doesnn't login or location at own room -> show nodes */}
          {/* Case 2: User locate another room -> hide nodes */}
          {user?.uid === room.uid ? <Nodes /> : null}

          <Player />

          {/* User Login -> Show Chat */}
          {isLogin && <Chat />}

          {/* Login  */}
          {showLogin && <Login />}

          {/* Register */}
          {showRegister && <Register />}

          {/* Infomation */}
          {showInfo && <Info />}

          {/* Loading */}
          {(loadingUser || loadingRoom) && <Loading />}

          {/* Timer Alert */}
          <TimerAlert />
        </div>
      </div>
    </div>
  );
};

export default Home;
